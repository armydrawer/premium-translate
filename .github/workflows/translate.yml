name: Auto-Translate Documentation

on:
  push:
    paths:
      - 'ru/**'
    branches: [main, master]
  pull_request:
    paths:
      - 'ru/**'
  workflow_dispatch:
    inputs:
      force:
        description: 'Force retranslation'
        type: boolean
        default: false
      method:
        description: 'Translation method'
        type: choice
        options: ['ai', 'simple']
        default: 'ai'
      max_files:
        description: 'Max files (1-20)'
        type: string
        default: '10'

env:
  PYTHON_VERSION: '3.11'

jobs:
  translate:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install --upgrade pip wheel
          pip install -r scripts/requirements.txt

      - name: Cache HuggingFace models
        uses: actions/cache@v3
        with:
          path: ~/.cache/huggingface
          key: hf-models-${{ hashFiles('scripts/translate.py') }}
          restore-keys: hf-models-

      - name: Validate max_files input
        run: |
          max_files="${{ github.event.inputs.max_files || '10' }}"
          if ! [[ "$max_files" =~ ^[0-9]+$ ]] || [ "$max_files" -lt 1 ] || [ "$max_files" -gt 20 ]; then
            echo "Invalid max_files: $max_files, using default: 10"
            echo "MAX_FILES=10" >> $GITHUB_ENV
          else
            echo "MAX_FILES=$max_files" >> $GITHUB_ENV
          fi

      - name: Check for changes
        id: changes
        run: |
          if [[ "${{ github.event.inputs.force }}" == "true" ]]; then
            echo "Force mode enabled"
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            changed_files=$(git diff --name-only HEAD~1 HEAD | grep -E '^ru/.*\.(md|png|jpg|jpeg)$' | wc -l)
            if [ "$changed_files" -gt 0 ]; then
              echo "Found $changed_files changed files"
              echo "should_run=true" >> $GITHUB_OUTPUT
            else
              echo "No relevant changes found"
              echo "should_run=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Run translation
        if: steps.changes.outputs.should_run == 'true'
        env:
          TRANSLATION_METHOD: ${{ github.event.inputs.method || 'ai' }}
        run: |
          # Создаем необходимые файлы если их нет
          mkdir -p scripts
          
          if [ ! -f scripts/translation_config.json ]; then
            cat > scripts/translation_config.json << 'EOF'
          {
            "max_files_per_run": 20,
            "max_tokens": 512,
            "max_file_size": 1048576,
            "timeout_seconds": 300
          }
          EOF
          fi
          
          if [ ! -f scripts/glossary.json ]; then
            cat > scripts/glossary.json << 'EOF'
          {
            "API": "API",
            "Docker": "Docker",
            "Kubernetes": "Kubernetes",
            "микросервис": "microservice",
            "контейнер": "container",
            "развертывание": "deployment",
            "мониторинг": "monitoring",
            "документация": "documentation",
            "конфигурация": "configuration"
          }
          EOF
          fi
          
          # Определяем флаги
          FORCE_FLAG=""
          AI_FLAG=""
          
          if [[ "${{ github.event.inputs.force }}" == "true" ]]; then
            FORCE_FLAG="--force"
          fi
          
          if [[ "$TRANSLATION_METHOD" == "simple" ]]; then
            AI_FLAG="--no-ai"
          fi
          
          # Запускаем перевод
          timeout 15m python scripts/translate.py \
            --source_dir ./ru \
            --target_dir ./en \
            --glossary scripts/glossary.json \
            --config scripts/translation_config.json \
            --max-files "$MAX_FILES" \
            --verbose \
            $FORCE_FLAG \
            $AI_FLAG

      - name: Check results
        if: steps.changes.outputs.should_run == 'true'
        run: |
          if [ -d ./en ]; then
            echo "Translation completed successfully"
            total_files=$(find ./en -type f | wc -l)
            md_files=$(find ./en -name "*.md" | wc -l)
            echo "Created $total_files files ($md_files markdown)"
          else
            echo "No output directory found"
          fi

      - name: Setup Git
        if: steps.changes.outputs.should_run == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit changes
        if: steps.changes.outputs.should_run == 'true'
        run: |
          git add en/
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            changed_files=$(git diff --staged --name-only | wc -l)
            
            commit_msg="docs: auto-translate $changed_files files"
            if [[ "${{ github.event.inputs.force }}" == "true" ]]; then
              commit_msg="$commit_msg (forced)"
            fi
            if [[ "$TRANSLATION_METHOD" == "simple" ]]; then
              commit_msg="$commit_msg [simple]"
            fi
            commit_msg="$commit_msg [skip ci]"
            
            git commit -m "$commit_msg"
            git push
            
            echo "## Translation Summary" >> $GITHUB_STEP_SUMMARY
            echo "- **Files processed**: $changed_files" >> $GITHUB_STEP_SUMMARY
            echo "- **Method**: $TRANSLATION_METHOD" >> $GITHUB_STEP_SUMMARY
            echo "- **Max files**: $MAX_FILES" >> $GITHUB_STEP_SUMMARY
            echo "- **Status**: ✅ Changes committed" >> $GITHUB_STEP_SUMMARY
          fi
